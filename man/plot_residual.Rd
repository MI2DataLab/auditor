% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_residual.R
\name{plot_residual}
\alias{plot_residual}
\alias{plotResidual}
\title{Plot Residuals vs Observed, Fitted or Variable Values}
\usage{
plot_residual(object, ..., variable = NULL, smooth = FALSE,
  std_residuals = FALSE, nlabel = 0)

plotResidual(object, ..., variable = NULL, smooth = FALSE,
  std_residuals = FALSE, nlabel = 0)
}
\arguments{
\item{object}{An object of class 'model_audit' or 'model_residual'.}

\item{...}{Other modelAudit objects to be plotted together.}

\item{variable}{Only for modelAudit objects. Name of model variable to order residuals.
If value is NULL the data is ordered by a vector of actual response (\code{y} parameter
passed to the \code{\link{audit}} function). One can also pass any name of any other variable
in the data set. If \code{variable = ""} is set, unordered observations are presented.}

\item{smooth}{Logical, indicates whenever smoothed lines should be added. By default it's FALSE.}

\item{std_residuals}{Logical, indicates whenever standardized residuals should be used.}

\item{nlabel}{Number of observations with the biggest Cook's distances to be labeled.}
}
\description{
A plot of residuals against fitted values, observed values or any variable.
}
\examples{
dragons <- DALEX::dragons[1:100, ]
lm_model <- lm(life_length ~ ., data = dragons)
lm_au <- audit(lm_model, data = dragons, y = dragons$life_length)
plot_residual(lm_au)

library(randomForest)
rf_model <- randomForest(life_length~., data = dragons)
rf_au <- audit(rf_model, data = dragons, y = dragons$life_length)
plot_residual(lm_au, rf_au)

}
\seealso{
\code{\link{plot.model_audit}}
}
