% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_tsecdf.R
\name{plot_tsecdf}
\alias{plot_tsecdf}
\alias{plotTwoSidedECDF}
\title{Two-sided Cumulative Distribution Function}
\usage{
plot_tsecdf(object, ..., scale_error = TRUE, outliers = NA,
  residuals = TRUE, reverse_y = FALSE)

plotTwoSidedECDF(object, ..., scale_error = TRUE, outliers = NA,
  residuals = TRUE, reverse_y = FALSE)
}
\arguments{
\item{object}{An object of class 'auditor_model_residual' created with \code{\link{model_residual}} function.}

\item{...}{Other modelAudit objects to be plotted together.}

\item{scale_error}{A logical value indicating whether ECDF should be scaled by proportions of positive and negative proportions.}

\item{outliers}{Number of outliers to be marked.}

\item{residuals}{A logical value indicating whether residuals should be marked.}

\item{reverse_y}{A logical value indicating whether values on y axis should be reversed.}
}
\value{
A ggplot object.
}
\description{
Cumulative Distribution Function for positive and negative residuals.
}
\examples{
dragons <- DALEX::dragons[1:100, ]

# fit a model
lm_model <- lm(life_length ~ ., data = dragons)

# use DALEX package to wrap up a model into explainer
lm_exp <- DALEX::explain(lm_model, data = dragons, y = dragons$life_length)

# validate a model with auditor
library(auditor)
lm_mr <- model_residual(lm_exp)
plot_tsecdf(lm_mr)
plot(lm_mr, type="tsecdf")

library(randomForest)
rf_model <- randomForest(life_length~., data = dragons)
rf_exp <- DALEX::explain(rf_model, data = dragons, y = dragons$life_length)
rf_mr <- model_residual(rf_exp)
plot_tsecdf(lm_mr, rf_mr, reverse_y = TRUE)

}
\seealso{
\code{\link{plot.model_audit}}
}
